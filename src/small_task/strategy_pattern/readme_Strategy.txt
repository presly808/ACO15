Добавлено задание на закрепление паттерна Стратегия

Литература: Глава 1 - Эрик Фримен - Паттерны проектирования (Head First O'Reilly)
 - Перед разбором кода рекомендуется прочитать Главу 1 из книги. Код приведенный ниже почти полностью повторяет пример
 рассматриваемый в книге.
 -   Майнд Карта по паттерну лежит на Google диске

Дано:
------------------------

Класс Duck - общий
    Потомки
       - MallardDuck - кряквы
       - DecoyDuck - манок, утка приманка
       - ModelDuck - модель утки
       - RedHeadDuck - рыжая утка - нырок
       - RubberDuck -  резиновая утка
       - Duckling - утенок, детеныш утки

Поведение уток:
    - Летать - fly() могут они это делать по разному
        Обычный полет на крыльях - FlyWithWIngs
        Не летать - FlyNoWay
        Совершать реактивный полет - FlyRocketPowered

    - Крякать - quack() - могут они это делать по разному
        Некоторые могут не уметь крякать - MuteQuack
        Пищать - Squaek (пищит резиновая утка)
        Имитировать кряканье - FakeQuack
        Крякать - Quack


    - Плавать - swim() Плавать могут почти все утки, кроме утят и утки приманки (ModelDuck)

     - Спать - sleep()


Нужно:
------------------------
 Реализовать детенышей утки - утят.
 Определить поведение утят - что они могут делать а что нет. Утята не могут плавать но возможно могут летать совершая
 реактивный полет.

 Реализовать новое поведение для уток умение СПАТЬ - sleep().

 *Сделать возможность динамически менять поведение для утят в зависимости от введенных данных с клавиатуры.
 Ввод можно организовать в виде меню:
    Выберите варианты полета для класса Duckling
        1 - поведение 1
        2 - поведение 2
        ....

P.S. Классы test\MiniDuckSimulator и test\MiniDuckSimulator1 реализованы для примера и визуального теста, это не тесты.
Свой метод main() для запуска приложения пишите в классе RunApp
